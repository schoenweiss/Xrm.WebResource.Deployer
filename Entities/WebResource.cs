//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xrm.WebResource.Deployer.Entities
{
    /// <summary>
    /// Data equivalent to files used in Web development. Web resources provide client-side components that are used to provide custom user interface elements.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("webresource")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xrm.WebResource.Deployer", "1.0")]
    public partial class WebResource : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {

        /// <summary>
        /// Default Constructor.
        /// </summary>
        public WebResource() : 
                base(EntityLogicalName)
        {
        }

        /// <summary/>
        public const string EntityLogicalName = "webresource";
        
        /// <summary/>
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        /// <summary/>
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        
        /// <summary/>
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        /// <summary/>
        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }


        /// <summary>
        /// Information that specifies whether this component can be deleted.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canbedeleted")]
        public Microsoft.Xrm.Sdk.BooleanManagedProperty CanBeDeleted
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("canbedeleted");
            }
            set
            {
                this.OnPropertyChanging("CanBeDeleted");
                this.SetAttributeValue("canbedeleted", value);
                this.OnPropertyChanged("CanBeDeleted");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
        public Microsoft.Xrm.Sdk.OptionSetValue ComponentState
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("componentstate");
            }
        }

        /// <summary>
        /// Bytes of the web resource, in Base64 format.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("content")]
        public string Content
        {
            get
            {
                return this.GetAttributeValue<string>("content");
            }
            set
            {
                this.OnPropertyChanging("Content");
                this.SetAttributeValue("content", value);
                this.OnPropertyChanged("Content");
            }
        }

        /// <summary>
        /// Unique identifier of the user who created the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Date and time when the web resource was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dependencyxml")]
        public string DependencyXml
        {
            get
            {
                return this.GetAttributeValue<string>("dependencyxml");
            }
            set
            {
                this.OnPropertyChanging("DependencyXml");
                this.SetAttributeValue("dependencyxml", value);
                this.OnPropertyChanged("DependencyXml");
            }
        }

        /// <summary>
        /// Description of the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
        public string Description
        {
            get
            {
                return this.GetAttributeValue<string>("description");
            }
            set
            {
                this.OnPropertyChanging("Description");
                this.SetAttributeValue("description", value);
                this.OnPropertyChanged("Description");
            }
        }

        /// <summary>
        /// Display name of the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("displayname")]
        public string DisplayName
        {
            get
            {
                return this.GetAttributeValue<string>("displayname");
            }
            set
            {
                this.OnPropertyChanging("DisplayName");
                this.SetAttributeValue("displayname", value);
                this.OnPropertyChanged("DisplayName");
            }
        }

        /// <summary>
        /// Version in which the form is introduced.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
        public string IntroducedVersion
        {
            get
            {
                return this.GetAttributeValue<string>("introducedversion");
            }
            set
            {
                this.OnPropertyChanging("IntroducedVersion");
                this.SetAttributeValue("introducedversion", value);
                this.OnPropertyChanged("IntroducedVersion");
            }
        }

        /// <summary>
        /// Information that specifies whether this web resource is available for mobile client in offline mode.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isavailableformobileoffline")]
        public System.Nullable<bool> IsAvailableForMobileOffline
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isavailableformobileoffline");
            }
            set
            {
                this.OnPropertyChanging("IsAvailableForMobileOffline");
                this.SetAttributeValue("isavailableformobileoffline", value);
                this.OnPropertyChanged("IsAvailableForMobileOffline");
            }
        }
        /// <summary>
        /// IsAvailableForMobileOffline as Enum
        /// </summary>
        public System.Nullable<Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsAvailableForMobileOffline> IsAvailableForMobileOfflineAsEnum
        {
            get
            {
                if (!IsAvailableForMobileOffline.HasValue) return null;
                if (IsAvailableForMobileOffline.Value) return Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsAvailableForMobileOffline.Yes;
                return Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsAvailableForMobileOffline.No;
            }
            set
            {
                if (!value.HasValue) this.SetAttributeValue("isavailableformobileoffline", null);
                if (value.Value == Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsAvailableForMobileOffline.Yes)
                {
                    this.SetAttributeValue("isavailableformobileoffline", true);
                }
                else
                {
                    this.SetAttributeValue("isavailableformobileoffline", false);
                }
            }
        }

        /// <summary>
        /// Information that specifies whether this component can be customized.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
        public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
            }
            set
            {
                this.OnPropertyChanging("IsCustomizable");
                this.SetAttributeValue("iscustomizable", value);
                this.OnPropertyChanged("IsCustomizable");
            }
        }

        /// <summary>
        /// Information that specifies whether this web resource is enabled for mobile client.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isenabledformobileclient")]
        public System.Nullable<bool> IsEnabledForMobileClient
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isenabledformobileclient");
            }
            set
            {
                this.OnPropertyChanging("IsEnabledForMobileClient");
                this.SetAttributeValue("isenabledformobileclient", value);
                this.OnPropertyChanged("IsEnabledForMobileClient");
            }
        }
        /// <summary>
        /// IsEnabledForMobileClient as Enum
        /// </summary>
        public System.Nullable<Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsEnabledForMobileClient> IsEnabledForMobileClientAsEnum
        {
            get
            {
                if (!IsEnabledForMobileClient.HasValue) return null;
                if (IsEnabledForMobileClient.Value) return Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsEnabledForMobileClient.Yes;
                return Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsEnabledForMobileClient.No;
            }
            set
            {
                if (!value.HasValue) this.SetAttributeValue("isenabledformobileclient", null);
                if (value.Value == Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsEnabledForMobileClient.Yes)
                {
                    this.SetAttributeValue("isenabledformobileclient", true);
                }
                else
                {
                    this.SetAttributeValue("isenabledformobileclient", false);
                }
            }
        }

        /// <summary>
        /// Information that specifies whether this component should be hidden.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ishidden")]
        public Microsoft.Xrm.Sdk.BooleanManagedProperty IsHidden
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("ishidden");
            }
            set
            {
                this.OnPropertyChanging("IsHidden");
                this.SetAttributeValue("ishidden", value);
                this.OnPropertyChanged("IsHidden");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
        public System.Nullable<bool> IsManaged
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
            }
        }
        /// <summary>
        /// IsManaged as Enum
        /// </summary>
        public System.Nullable<Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsComponentManaged> IsManagedAsEnum
        {
            get
            {
                if (!IsManaged.HasValue) return null;
                if (IsManaged.Value) return Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsComponentManaged.Managed;
                return Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsComponentManaged.Unmanaged;
            }
            set
            {
                if (!value.HasValue) this.SetAttributeValue("ismanaged", null);
                if (value.Value == Xrm.WebResource.Deployer.Entities.WebResource.OptionSet.IsComponentManaged.Managed)
                {
                    this.SetAttributeValue("ismanaged", true);
                }
                else
                {
                    this.SetAttributeValue("ismanaged", false);
                }
            }
        }

        /// <summary>
        /// Language of the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languagecode")]
        public System.Nullable<int> LanguageCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("languagecode");
            }
            set
            {
                this.OnPropertyChanging("LanguageCode");
                this.SetAttributeValue("languagecode", value);
                this.OnPropertyChanged("LanguageCode");
            }
        }

        /// <summary>
        /// Unique identifier of the user who last modified the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Date and time when the web resource was last modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// Name of the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
        public string Name
        {
            get
            {
                return this.GetAttributeValue<string>("name");
            }
            set
            {
                this.OnPropertyChanging("Name");
                this.SetAttributeValue("name", value);
                this.OnPropertyChanged("Name");
            }
        }

        /// <summary>
        /// Unique identifier of the organization associated with the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
        public Microsoft.Xrm.Sdk.EntityReference OrganizationId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
        public System.Nullable<System.DateTime> OverwriteTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
            }
        }

        /// <summary>
        /// Silverlight runtime version number required by a silverlight web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("silverlightversion")]
        public string SilverlightVersion
        {
            get
            {
                return this.GetAttributeValue<string>("silverlightversion");
            }
            set
            {
                this.OnPropertyChanging("SilverlightVersion");
                this.SetAttributeValue("silverlightversion", value);
                this.OnPropertyChanged("SilverlightVersion");
            }
        }

        /// <summary>
        /// Unique identifier of the associated solution.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
        public System.Nullable<System.Guid> SolutionId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("supportingsolutionid")]
        public System.Nullable<System.Guid> SupportingSolutionId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("supportingsolutionid");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// Unique identifier of the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("webresourceid")]
        public System.Nullable<System.Guid> WebResourceId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("webresourceid");
            }
            set
            {
                this.OnPropertyChanging("WebResourceId");
                this.SetAttributeValue("webresourceid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
                this.OnPropertyChanged("WebResourceId");
            }
        }

        /// <summary/>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("webresourceid")]
        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }
            set
            {
                this.WebResourceId = value;
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("webresourceidunique")]
        public System.Nullable<System.Guid> WebResourceIdUnique
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("webresourceidunique");
            }
        }

        /// <summary>
        /// Drop-down list for selecting the type of the web resource.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("webresourcetype")]
        public Microsoft.Xrm.Sdk.OptionSetValue WebResourceType
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("webresourcetype");
            }
            set
            {
                this.OnPropertyChanging("WebResourceType");
                this.SetAttributeValue("webresourcetype", value);
                this.OnPropertyChanged("WebResourceType");
            }
        }

        /// <summary/>
        public class OptionSet
        {

            /// <summary/>
            public enum Type
            {

                /// <summary/>
                WebpageHtml = 1,

                /// <summary/>
                StyleSheetCss = 2,

                /// <summary/>
                ScriptJScript = 3,

                /// <summary/>
                DataXml = 4,

                /// <summary/>
                PngFormat = 5,

                /// <summary/>
                JpgFormat = 6,

                /// <summary/>
                GifFormat = 7,

                /// <summary/>
                SilverlightXap = 8,

                /// <summary/>
                StyleSheetXsl = 9,

                /// <summary/>
                IcoFormat = 10,
            }

            /// <summary/>
            public enum ComponentState
            {

                /// <summary/>
                Published = 0,

                /// <summary/>
                Unpublished = 1,

                /// <summary/>
                Deleted = 2,

                /// <summary/>
                DeletedUnpublished = 3,
            }

            /// <summary/>
            public enum IsComponentManaged
            {

                /// <summary/>
                Unmanaged = 0,

                /// <summary/>
                Managed = 1,
            }

            /// <summary/>
            public enum IsAvailableForMobileOffline
            {

                /// <summary/>
                No = 0,

                /// <summary/>
                Yes = 1,
            }

            /// <summary/>
            public enum IsEnabledForMobileClient
            {

                /// <summary/>
                No = 0,

                /// <summary/>
                Yes = 1,
            }

        }

        /// <summary/>
        public class PropertyNames
        {

            /// <summary/>
            public const string CanBeDeleted = "canbedeleted";

            /// <summary/>
            public const string ComponentState = "componentstate";

            /// <summary/>
            public const string ComponentStateName = "componentstatename";

            /// <summary/>
            public const string Content = "content";

            /// <summary/>
            public const string CreatedBy = "createdby";

            /// <summary/>
            public const string CreatedByName = "createdbyname";

            /// <summary/>
            public const string CreatedOn = "createdon";

            /// <summary/>
            public const string CreatedOnBehalfBy = "createdonbehalfby";

            /// <summary/>
            public const string CreatedOnBehalfByName = "createdonbehalfbyname";

            /// <summary/>
            public const string DependencyXml = "dependencyxml";

            /// <summary/>
            public const string Description = "description";

            /// <summary/>
            public const string DisplayName = "displayname";

            /// <summary/>
            public const string IntroducedVersion = "introducedversion";

            /// <summary/>
            public const string IsAvailableForMobileOffline = "isavailableformobileoffline";

            /// <summary/>
            public const string IsAvailableForMobileOfflineName = "isavailableformobileofflinename";

            /// <summary/>
            public const string IsCustomizable = "iscustomizable";

            /// <summary/>
            public const string IsEnabledForMobileClient = "isenabledformobileclient";

            /// <summary/>
            public const string IsEnabledForMobileClientName = "isenabledformobileclientname";

            /// <summary/>
            public const string IsHidden = "ishidden";

            /// <summary/>
            public const string IsManaged = "ismanaged";

            /// <summary/>
            public const string IsManagedName = "ismanagedname";

            /// <summary/>
            public const string LanguageCode = "languagecode";

            /// <summary/>
            public const string ModifiedBy = "modifiedby";

            /// <summary/>
            public const string ModifiedByName = "modifiedbyname";

            /// <summary/>
            public const string ModifiedOn = "modifiedon";

            /// <summary/>
            public const string ModifiedOnBehalfBy = "modifiedonbehalfby";

            /// <summary/>
            public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";

            /// <summary/>
            public const string Name = "name";

            /// <summary/>
            public const string OrganizationId = "organizationid";

            /// <summary/>
            public const string OrganizationIdName = "organizationidname";

            /// <summary/>
            public const string OverwriteTime = "overwritetime";

            /// <summary/>
            public const string SilverlightVersion = "silverlightversion";

            /// <summary/>
            public const string SolutionId = "solutionid";

            /// <summary/>
            public const string SupportingSolutionId = "supportingsolutionid";

            /// <summary/>
            public const string VersionNumber = "versionnumber";

            /// <summary/>
            public const string WebResourceId = "webresourceid";

            /// <summary/>
            public const string WebResourceIdUnique = "webresourceidunique";

            /// <summary/>
            public const string WebResourceType = "webresourcetype";

            /// <summary/>
            public const string WebResourceTypeName = "webresourcetypename";

        }

        /// <summary/>
        public class Ref
        {
        }
    }
     
}
